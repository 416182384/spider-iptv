name: Deploy IPTV Spider

# 触发条件：代码推送到 main 分支或者每天凌晨 2 点自动触发
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 2 * * *'

jobs:
  deploy:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 运行环境

    services:
      mysql:
        image: mysql:5.7  # 使用 MySQL 5.7 镜像
        env:
          MYSQL_ROOT_PASSWORD: your_root_password
          MYSQL_USER: iptv_user
          MYSQL_PASSWORD: your_password
          MYSQL_DATABASE: iptv
          MYSQL_INITDB_SCRIPT: |  # 初始化 SQL 脚本
            SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3  # 增加健康检查选项，确保 MySQL 服务正常启动

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4  # 检出代码

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9  # 设置 Python 版本

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          pip3 install bs4 m3u8 requests mysql-connector-python pymysql sqlalchemy requests-html lxml aiomysql opencv-python timeout-decorator  # 合并安装命令，减少安装步骤

      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg  # 安装 FFmpeg

      - name: Run Spider
        run: |
          # 获取 MySQL 服务的连接信息
          MYSQL_HOST=127.0.0.1
          MYSQL_USER=iptv_user
          MYSQL_PASSWORD=your_password
          MYSQL_DATABASE=iptv

          # 导出 API_TOKEN
          export API_TOKEN=${{ secrets.API_TOKEN }}

          # 等待 MySQL 服务启动
          until mysqladmin ping -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD; do
            echo "Waiting for MySQL to start..."
            sleep 5
          done

          # 导入数据库结构
          mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < data/iptv_data.sql

          # 运行主程序
          python3 main.py

      - name: Upload Result
        uses: actions/upload-artifact@v4
        with:
          name: iptv-sources
          path: source/iptv.txt  # 上传生成的文件到 GitHub Actions 的 Artifact
